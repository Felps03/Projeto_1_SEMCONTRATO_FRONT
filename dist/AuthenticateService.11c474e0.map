{"version":3,"sources":["app\\js\\config\\index.js","app\\js\\services\\AuthenticateService.js"],"names":["HOST","AuthenticateService","email","password","Promise","resolve","reject","fetch","method","mode","headers","body","JSON","stringify","then","res","status","token","get","localStorage","setItem","json","result","window","location","href","emailCode","getItem","alert","removeItem","catch","console","log","error"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;;;;IACaC,8BAAAA;;;;;;;qCACIC,OAAOC,UAAU;AAC1B,mBAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpCC,sBAASP,WAAT,yBAAmC;AAC/BQ,4BAAQ,MADuB;AAE/BC,0BAAM,MAFyB;AAG/BC,6BAAS;AACL,kCAAU,mCADL;AAEL,wCAAgB;AAFX,qBAHsB;AAO/BC,0BAAMC,KAAKC,SAAL,CAAe;AACjB,iCAASX,KADQ;AAEjB,oCAAYC;AAFK,qBAAf;AAPyB,iBAAnC,EAWGW,IAXH,CAWQ,eAAO;AACX,wBAAIC,IAAIC,MAAJ,KAAe,GAAnB,EAAwB;AACpB,+BAAOV,OAAOS,GAAP,CAAP;AACH;AACD,wBAAME,QAAQF,IAAIL,OAAJ,CAAYQ,GAAZ,CAAgB,OAAhB,CAAd;AACA,wBAAID,SAAS,IAAb,EAAmB;AACfE,qCAAaC,OAAb,CAAqB,KAArB,EAA4BH,KAA5B;AACH;AACDF,wBAAIM,IAAJ,GACKP,IADL,CACU,UAACQ,MAAD,EAAY;AAClBH,qCAAaC,OAAb,CAAqB,OAArB,EAA8BE,OAAO,CAAP,EAAU,OAAV,CAA9B;AACAH,qCAAaC,OAAb,CAAqB,IAArB,EAA2BE,OAAO,CAAP,EAAU,KAAV,CAA3B;AACAH,qCAAaC,OAAb,CAAqB,SAArB,EAAgCE,OAAO,CAAP,EAAU,SAAV,CAAhC;AACAC,+BAAOC,QAAP,CAAgBC,IAAhB,GAAuB,WAAvB;AACApB;AACH,qBAPD;AAQH,iBA3BD;AA4BH,aA7BM,CAAP;AA8BH;;;sCACaH,OAAO;AACjB,mBAAOK,MAASP,WAAT,yBAAmC;AACtCQ,wBAAQ,MAD8B;AAEtCE,yBAAS;AACL,8BAAU,mCADL;AAEL,oCAAgB;AAFX,iBAF6B;AAMtCC,sBAAMC,KAAKC,SAAL,CAAe;AACjB,6BAASX;AADQ,iBAAf;AANgC,aAAnC,CAAP;AAUH;;;mCACUwB,WAAWxB,OAAOC,UAAU;AACnC,mBAAOI,MAASP,WAAT,wBAAkC;AACrCQ,wBAAQ,MAD6B;AAErCE,yBAAS;AACL,8BAAU,mCADL;AAEL,oCAAgB;AAFX,iBAF4B;AAMrCC,sBAAMC,KAAKC,SAAL,CAAe;AACjB,iCAAaa,SADI;AAEjB,6BAASxB;AAFQ,iBAAf;AAN+B,aAAlC,CAAP;AAWH;;;iCACQ;AACL,mBAAOK,MAASP,WAAT,mBAA6B;AAChCQ,wBAAQ,MADwB;AAEhCE,yBAAS;AACL,8BAAU,mCADL;AAEL,oCAAgB,kBAFX;AAGL,iDAA2BS,aAAaQ,OAAb,CAAqB,KAArB;AAHtB;AAFuB,aAA7B,EAOJb,IAPI,CAOC,eAAO;AACX,oBAAIC,IAAIC,MAAJ,IAAc,GAAlB,EAAuB;AACnBY,0BAAM,2BAAN;AACH;AACD,oBAAIb,IAAIC,MAAJ,IAAc,GAAlB,EAAuB;AACnBG,iCAAaU,UAAb,CAAwB,KAAxB;AACAV,iCAAaU,UAAb,CAAwB,OAAxB;AACAV,iCAAaU,UAAb,CAAwB,IAAxB;AACAN,2BAAOC,QAAP,CAAgBC,IAAhB,GAAuB,YAAvB;AACH;AACJ,aAjBM,EAiBJK,KAjBI,CAiBE,iBAAS;AACdC,wBAAQC,GAAR,CAAY,SAAZ,EAAuBC,KAAvB;AACA,uBAAOA,KAAP;AACH,aApBM,CAAP;AD5DD,ACiFF,IDjFQjC,sBAAO,wBAAb","file":"AuthenticateService.11c474e0.map","sourceRoot":"..","sourcesContent":["export const HOST = 'http://localhost:3000/';\r\n","import { HOST } from '../config/index';\r\nexport class AuthenticateService {\r\n    authenticate(email, password) {\r\n        return new Promise((resolve, reject) => {\r\n            fetch(`${HOST}users/authenticate`, {\r\n                method: 'POST',\r\n                mode: 'cors',\r\n                headers: {\r\n                    'Accept': 'application/json, text/plain, */*',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    \"email\": email,\r\n                    \"password\": password\r\n                })\r\n            }).then(res => {\r\n                if (res.status !== 200) {\r\n                    return reject(res);\r\n                }\r\n                const token = res.headers.get(\"Token\");\r\n                if (token != null) {\r\n                    localStorage.setItem('tkn', token);\r\n                }\r\n                res.json()\r\n                    .then((result) => {\r\n                    localStorage.setItem('email', result[0]['email']);\r\n                    localStorage.setItem('id', result[0]['_id']);\r\n                    localStorage.setItem('isAdmin', result[0]['isAdmin']);\r\n                    window.location.href = \"home.html\";\r\n                    resolve();\r\n                });\r\n            });\r\n        });\r\n    }\r\n    resetPassword(email) {\r\n        return fetch(`${HOST}users/user/recover`, {\r\n            method: 'post',\r\n            headers: {\r\n                'Accept': 'application/json, text/plain, */*',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                \"email\": email\r\n            })\r\n        });\r\n    }\r\n    verifyCode(emailCode, email, password) {\r\n        return fetch(`${HOST}users/code/verify`, {\r\n            method: 'post',\r\n            headers: {\r\n                'Accept': 'application/json, text/plain, */*',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                \"emailCode\": emailCode,\r\n                \"email\": email\r\n            })\r\n        });\r\n    }\r\n    logout() {\r\n        return fetch(`${HOST}users/logout`, {\r\n            method: 'post',\r\n            headers: {\r\n                'Accept': 'application/json, text/plain, */*',\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${localStorage.getItem(\"tkn\")}`\r\n            },\r\n        }).then(res => {\r\n            if (res.status == 400) {\r\n                alert(\"Houve um erro ao Deslogar\");\r\n            }\r\n            if (res.status == 200) {\r\n                localStorage.removeItem(\"tkn\");\r\n                localStorage.removeItem(\"email\");\r\n                localStorage.removeItem(\"id\");\r\n                window.location.href = 'index.html';\r\n            }\r\n        }).catch(error => {\r\n            console.log(\"error: \", error);\r\n            return error;\r\n        });\r\n    }\r\n}\r\n"]}