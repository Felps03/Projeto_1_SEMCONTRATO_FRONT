{"version":3,"sources":["app/js/config/index.js","app/js/services/AuthenticateService.js"],"names":["HOST","AuthenticateService","email","password","Promise","resolve","reject","fetch","method","mode","headers","body","JSON","stringify","then","res","status","token","get","localStorage","setItem","json","result","window","location","href","emailCode","getItem","alert","removeItem","catch","error","console","log"],"mappings":"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","file":"AuthenticateService.174d74dc.js","sourceRoot":"..","sourcesContent":["export const HOST = 'http://localhost:3000/';\r\n","import { HOST } from '../config/index';\r\nexport class AuthenticateService {\r\n    authenticate(email, password) {\r\n        return new Promise((resolve, reject) => {\r\n            fetch(`${HOST}users/authenticate`, {\r\n                method: 'POST',\r\n                mode: 'cors',\r\n                headers: {\r\n                    'Accept': 'application/json, text/plain, */*',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    \"email\": email,\r\n                    \"password\": password\r\n                })\r\n            }).then(res => {\r\n                if (res.status !== 200) {\r\n                    return reject(res);\r\n                }\r\n                const token = res.headers.get(\"Token\");\r\n                if (token != null) {\r\n                    localStorage.setItem('tkn', token);\r\n                }\r\n                res.json()\r\n                    .then((result) => {\r\n                    localStorage.setItem('email', result[0]['email']);\r\n                    localStorage.setItem('id', result[0]['_id']);\r\n                    localStorage.setItem('isAdmin', result[0]['isAdmin']);\r\n                    window.location.href = \"home.html\";\r\n                    resolve();\r\n                });\r\n            });\r\n        });\r\n    }\r\n    resetPassword(email) {\r\n        return fetch(`${HOST}users/user/recover`, {\r\n            method: 'post',\r\n            headers: {\r\n                'Accept': 'application/json, text/plain, */*',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                \"email\": email\r\n            })\r\n        });\r\n    }\r\n    verifyCode(emailCode, email, password) {\r\n        return fetch(`${HOST}users/code/verify`, {\r\n            method: 'post',\r\n            headers: {\r\n                'Accept': 'application/json, text/plain, */*',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                \"emailCode\": emailCode,\r\n                \"email\": email\r\n            })\r\n        });\r\n    }\r\n    logout() {\r\n        return fetch(`${HOST}users/logout`, {\r\n            method: 'post',\r\n            headers: {\r\n                'Accept': 'application/json, text/plain, */*',\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${localStorage.getItem(\"tkn\")}`\r\n            },\r\n        }).then(res => {\r\n            if (res.status == 400) {\r\n                alert(\"Houve um erro ao Deslogar\");\r\n            }\r\n            if (res.status == 200) {\r\n                localStorage.removeItem(\"tkn\");\r\n                localStorage.removeItem(\"email\");\r\n                localStorage.removeItem(\"id\");\r\n                window.location.href = 'index.html';\r\n            }\r\n        }).catch(error => {\r\n            console.log(\"error: \", error);\r\n            return error;\r\n        });\r\n    }\r\n}\r\n"]}