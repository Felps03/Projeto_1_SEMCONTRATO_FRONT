{"version":3,"sources":["app/js/config/index.js","app/js/services/AuthenticateService.js"],"names":["HOST","AuthenticateService","email","password","fetch","method","mode","headers","body","JSON","stringify","then","res","token","get","localStorage","setItem","json","result","console","log","window","location","href","emailCode","getItem"],"mappings":";;;;;;AAAO,IAAMA,IAAI,GAAG,wBAAb;ACAP;;;;;;;;IACaC;;;;;;;;;iCACIC,OAAOC,UAAU;AAC1B,aAAOC,KAAK,WAAIJ,WAAJ,yBAA8B;AACtCK,QAAAA,MAAM,EAAE,MAD8B;AAEtCC,QAAAA,IAAI,EAAE,MAFgC;AAGtCC,QAAAA,OAAO,EAAE;AACL,oBAAU,mCADL;AAEL,0BAAgB;AAFX,SAH6B;AAOtCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjB,mBAASR,KADQ;AAEjB,sBAAYC;AAFK,SAAf;AAPgC,OAA9B,CAAL,CAWJQ,IAXI,CAWC,UAAAC,GAAG,EAAI;AACX,YAAMC,KAAK,GAAGD,GAAG,CAACL,OAAJ,CAAYO,GAAZ,CAAgB,OAAhB,CAAd;;AACA,YAAID,KAAK,IAAI,IAAb,EAAmB;AACfE,UAAAA,YAAY,CAACC,OAAb,CAAqB,KAArB,EAA4BH,KAA5B;AACH;;AACD,eAAOD,GAAG,CAACK,IAAJ,EAAP;AACH,OAjBM,EAiBJN,IAjBI,CAiBC,UAAAO,MAAM,EAAI;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACAH,QAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BE,MAAM,CAAC,CAAD,CAAN,CAAU,OAAV,CAA9B;AACAH,QAAAA,YAAY,CAACC,OAAb,CAAqB,IAArB,EAA2BE,MAAM,CAAC,CAAD,CAAN,CAAU,KAAV,CAA3B;AACAH,QAAAA,YAAY,CAACC,OAAb,CAAqB,SAArB,EAAgCE,MAAM,CAAC,CAAD,CAAN,CAAU,SAAV,CAAhC;AACAG,QAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,WAAvB;AACH,OAvBM,CAAP;AAwBH;;;kCACarB,OAAO;AACjB,aAAOE,KAAK,WAAIJ,WAAJ,yBAA8B;AACtCK,QAAAA,MAAM,EAAE,MAD8B;AAEtCE,QAAAA,OAAO,EAAE;AACL,oBAAU,mCADL;AAEL,0BAAgB;AAFX,SAF6B;AAMtCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjB,mBAASR;AADQ,SAAf;AANgC,OAA9B,CAAZ;AAUH;;;+BACUsB,WAAWtB,OAAOC,UAAU;AACnC,aAAOC,KAAK,WAAIJ,WAAJ,wBAA6B;AACrCK,QAAAA,MAAM,EAAE,MAD6B;AAErCE,QAAAA,OAAO,EAAE;AACL,oBAAU,mCADL;AAEL,0BAAgB;AAFX,SAF4B;AAMrCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjB,uBAAac,SADI;AAEjB,mBAAStB;AAFQ,SAAf;AAN+B,OAA7B,CAAZ;AAWH;;;6BACQ;AACL,aAAOE,KAAK,WAAIJ,WAAJ,mBAAwB;AAChCK,QAAAA,MAAM,EAAE,MADwB;AAEhCE,QAAAA,OAAO,EAAE;AACL,oBAAU,mCADL;AAEL,0BAAgB,kBAFX;AAGL,4CAA2BQ,YAAY,CAACU,OAAb,CAAqB,KAArB,CAA3B;AAHK;AAFuB,OAAxB,CAAZ;AAQH","file":"AuthenticateService.174d74dc.js","sourceRoot":"..","sourcesContent":["export const HOST = 'http://localhost:3000/';\r\n","import { HOST } from '../config/index';\r\nexport class AuthenticateService {\r\n    authenticate(email, password) {\r\n        return fetch(`${HOST}users/authenticate`, {\r\n            method: 'POST',\r\n            mode: 'cors',\r\n            headers: {\r\n                'Accept': 'application/json, text/plain, */*',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                \"email\": email,\r\n                \"password\": password\r\n            })\r\n        }).then(res => {\r\n            const token = res.headers.get(\"Token\");\r\n            if (token != null) {\r\n                localStorage.setItem('tkn', token);\r\n            }\r\n            return res.json();\r\n        }).then(result => {\r\n            console.log(result);\r\n            localStorage.setItem('email', result[0]['email']);\r\n            localStorage.setItem('id', result[0]['_id']);\r\n            localStorage.setItem('isAdmin', result[0]['isAdmin']);\r\n            window.location.href = \"home.html\";\r\n        });\r\n    }\r\n    resetPassword(email) {\r\n        return fetch(`${HOST}users/user/recover`, {\r\n            method: 'post',\r\n            headers: {\r\n                'Accept': 'application/json, text/plain, */*',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                \"email\": email\r\n            })\r\n        });\r\n    }\r\n    verifyCode(emailCode, email, password) {\r\n        return fetch(`${HOST}users/code/verify`, {\r\n            method: 'post',\r\n            headers: {\r\n                'Accept': 'application/json, text/plain, */*',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                \"emailCode\": emailCode,\r\n                \"email\": email\r\n            })\r\n        });\r\n    }\r\n    logout() {\r\n        return fetch(`${HOST}users/logout`, {\r\n            method: 'post',\r\n            headers: {\r\n                'Accept': 'application/json, text/plain, */*',\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${localStorage.getItem(\"tkn\")}`\r\n            },\r\n        });\r\n    }\r\n}\r\n"]}